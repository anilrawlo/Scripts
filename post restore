pipeline {
    agent any

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['int', 'qa', 'stress', 'prod'], description: 'Choose the environment to run the scripts')
    }

    stages {
        stage('Run SQL Scripts') {
            steps {
                script {
                    def envConfig = [
                        'int'   : [server: '10.0.0.1', creds: 'int-ssh-credentials-id'],
                        'qa'    : [server: '10.0.0.2', creds: 'qa-ssh-credentials-id'],
                        'stress': [server: '10.0.0.3', creds: 'stress-ssh-credentials-id'],
                        'prod'  : [server: '10.0.0.4', creds: 'prod-ssh-credentials-id']
                    ]

                    def config = envConfig[params.ENVIRONMENT]

                    sshagent(credentials: [config.creds]) {
                        sh """
                            ssh -o StrictHostKeyChecking=no user@${config.server} 'sqlplus -s username/password@database < /opt/jboss/db_scripts/${params.ENVIRONMENT}/script1.sql; sleep 5'
                            ssh -o StrictHostKeyChecking=no user@${config.server} 'sqlplus -s username/password@database < /opt/jboss/db_scripts/${params.ENVIRONMENT}/script2.sql; sleep 5'
                            ssh -o StrictHostKeyChecking=no user@${config.server} 'sqlplus -s username/password@database < /opt/jboss/db_scripts/${params.ENVIRONMENT}/script3.sql'
                        """
                    }
                }
            }
        }
    }
}